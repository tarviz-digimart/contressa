"""
Django settings for contressa project.

Generated by 'django-admin startproject' using Django 5.1.5.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
from dotenv import load_dotenv
import os
from corsheaders.defaults import default_headers
from datetime import timedelta

load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv("DJANGO_SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv("DEBUG")


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'drf_yasg',
    'rest_framework',
    'fcm_django',
    'base',
    'tasks',
    'organization',
    'authentication',
    'attendance',
    'corsheaders',
]

MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'simple_history.middleware.HistoryRequestMiddleware',
    'contressa.custom_middlewares.OrganizationContextMiddleware',
    'crum.CurrentRequestUserMiddleware',

]
ROOT_URLCONF = 'contressa.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'contressa.wsgi.application'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # Use simplejwt
    ),
}

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=1),  # Set access token lifetime
    'REFRESH_TOKEN_LIFETIME': timedelta(days=7), # Set refresh token lifetime
    'ROTATE_REFRESH_TOKENS': True, # this is optional
    # ... other simplejwt settings (see documentation)
}


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_USER_MODEL = 'base.CustomUser'
 


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
        "OPTIONS": {"max_similarity": 0.7},  # Prevents passwords similar to user attributes
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
        "OPTIONS": {"min_length": 8},  # Requires at least 8 characters
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]



# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

environment = os.getenv("ENVIRONMENT")

if environment == "production":
        ALLOWED_HOSTS = ['contressa.com']

        STATIC_ROOT = BASE_DIR / 'staticfiles'
        MEDIA_ROOT = '/var/www/media/'

        SECURE_SSL_REDIRECT = True
        CSRF_COOKIE_SECURE = True
        SESSION_COOKIE_SECURE = True

        CORS_ALLOWED_ORIGINS = ['https://contressa.com']

        LOGGING = {
            'version': 1,
            'disable_existing_loggers': False,
            'handlers': {
                'file': {
                    'level': 'WARNING',
                    'class': 'logging.FileHandler',
                    'filename': '/var/log/django.log',
                },
            },
            'root': {
                'handlers': ['file'],
                'level': 'WARNING',
            },
        }
else:
    ALLOWED_HOSTS = ['localhost', '127.0.0.1']
    print("In dev env .. ")

    STATICFILES_DIRS = [BASE_DIR / 'static']
    MEDIA_ROOT = BASE_DIR / 'media'

    INSTALLED_APPS += ['debug_toolbar']
    MIDDLEWARE += ['debug_toolbar.middleware.DebugToolbarMiddleware']

    CORS_ALLOWED_ORIGINS = [
        "http://localhost:3000",  
        "http://127.0.0.1:3000",
    ]

    CORS_ALLOW_CREDENTIALS = True

    LOGGING = {
        'version': 1,
        'disable_existing_loggers': False,
        'handlers': {
            'console': {
                'class': 'logging.StreamHandler',
            },
        },
        'root': {
            'handlers': ['console'],
            'level': 'DEBUG',
        },
    }


SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE': ['email'],
        'AUTH_PARAMS': {'access_type': 'online'},
        'OAUTH_PKCE_ENABLED': True,  # For added security with OAuth
        'CLIENT_ID': '849462989068-itju8a87nkg1dlbn64o4drksp44e5f6m.apps.googleusercontent.com',
        'SECRET': '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',
    }
}


CORS_ALLOW_HEADERS = (
    *default_headers,
    'Branch',
    "Organization"
)
# Django Rest Auth Configuration
REST_USE_JWT = True  # This is recommended when using dj-rest-auth with JWT tokens


SITE_ID = 1  # Default, required by django-allauth

ACCOUNT_ADAPTER = "allauth.account.adapter.DefaultAccountAdapter"
SOCIALACCOUNT_ADAPTER = "allauth.socialaccount.adapter.DefaultSocialAccountAdapter"

# Disable the redirect to login page
# ACCOUNT_AUTHENTICATION_METHOD = 'email'
# ACCOUNT_EMAIL_REQUIRED = True
# ACCOUNT_EMAIL_VERIFICATION = "optional"

# LOGIN_REDIRECT_URL = "/"  # Prevents unwanted redirects
# LOGOUT_REDIRECT_URL = "/"  # Redirects to home after logout

from firebase_admin import initialize_app
FIREBASE_APP = initialize_app()

FCM_DJANGO_SETTINGS = {
    "ONE_DEVICE_PER_USER": True,
    "DELETE_INACTIVE_DEVICES": True,
}


# # Disable the username field
# ACCOUNT_USERNAME_REQUIRED = False  # Ensures the username is not required
# ACCOUNT_AUTHENTICATED_REMEMBER = True
# ACCOUNT_EMAIL_REQUIRED = True  # Make email required
# ACCOUNT_EMAIL_VERIFICATION = 'mandatory'  # Ensure email verification

ACCOUNT_USER_MODEL_USERNAME_FIELD = None
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_USERNAME_REQUIRED = False
ACCOUNT_AUTHENTICATION_METHOD = 'email'

SENDGRID_API_KEY = os.getenv('SENDGRID_API_KEY')
SENDGRID_SENDER = os.getenv('SENDGRID_SENDER')



EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('SMTP_EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('SMTP_EMAIL_HOST_PASSWORD') # Use the 16-character app password
DEFAULT_FROM_EMAIL = os.getenv('DEFAULT_FROM_EMAIL')

DOMAIN_ADDRESS = "localhost:8000"

TEST_MODE = os.getenv('TEST_MODE') == True